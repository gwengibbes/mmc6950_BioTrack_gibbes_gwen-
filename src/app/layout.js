import localFont from "next/font/local";
import "./globals.css";
import mongoose from "mongoose";
// import 'bootstrap/dist/css/bootstrap.min.css';

console.log('Setting up app')

let cxn; 
async function dbConnect() {
    if(!cxn){
        console.log('Connecting....')
        const mongoDbUrl = process.env['MONGODB_URI']
        console.log(mongoDbUrl);
        cxn = mongoose.connect(mongoDbUrl);
        cxn.then((res)=>{
            console.log('Connected to DB');
        }).catch(err=>{
            console.log('Failed to connect to MongoDB', err);
        })
    }
    return cxn;
}

await dbConnect()


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "BioTrack",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
    <head>
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
            integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
            crossOrigin="anonymous"
        />
    </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
